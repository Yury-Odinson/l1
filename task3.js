// Реализовать аналог библиотеки Math (можно назвать MathX) с базовым набором функций, используя замыкания:
// вычисление N-го числа в ряду Фибоначчи 
// вычисление всех чисел в ряду Фибоначчи до числа N
// вычисление N-го просто числа
// вычисление всех простых чисел до числа N

// 	Будет плюсом, если задумаетесь и об оптимизации.

function MathX(num) {

    let a = 0                                   // начальное первое число Фибоначчи
    let b = 1                                   // начальное второе число Фибоначчи
    let c = 1                                   // начальное число, для суммирования первых двух чисел
    let n = null                                // переменная для сохранения результата порядкового номера или уведомления, что введённое число не из ряда Фибоначчи
    const allFibonacci = []                     // массив, содержащий все числа Фибоначчи, до заданного на вход функции числа включительно

    function fibonacci() {
        for (let i = 1; i <= num; i++) {            // запуск цикла подсчёта чисел Фибоначчи вплоть до заданного числа (num)
            a = b
            b = c
            c = a + b
            allFibonacci.push(c)    // добавление в массив чисел Фибоначчи до заданного на вход в функцию числа
            if (c === num) {
                n = i               // получение N-ого числа в ряду Фибоначчи
                break
            } else {
                n = "Не является числом Фибоначчи"
            }
        }
    }
    fibonacci()

    console.log(`N-ое число в ряду Фибоначчи - ${c}`)  // результат вычисления N-го числа в ряду Фибоначчи 
    console.log(allFibonacci)
}

MathX(5)
